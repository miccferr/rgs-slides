/*
This has been generated by the overpass-turbo wizard.
The original search was:
“amenity=pub around "Royal Geographical Society, London GB"”
*/
[out:json][timeout:25];
// adjust the search radius (in meters) here
{{radius=3000}}
// gather results
(
  // query part for: “amenity=pub”
  node["amenity"="pub"](around:{{radius}},{{geocodeCoords:Royal Geographical Society, London GB}});
  way["amenity"="pub"](around:{{radius}},{{geocodeCoords:Royal Geographical Society, London GB}});
  relation["amenity"="pub"](around:{{radius}},{{geocodeCoords:Royal Geographical Society, London GB}});
);
// print results
out body;
>;
out skel qt;


amenity=pub around "Royal Geographical Society, London GB"
(amenity=pub and food=yes) around "Royal Geographical Society, London GB"
il raggio di deafult è 1000 metri


node["name"="Royal Geographical Society"];
node (around:1000) ["amenity"="pub"]["food" = "yes"];




//nuovo tentattivo
//node["amenity"="pub"]["toilets"="yes"](area.searchArea);
[out:json][timeout:25];

//save search area in var
{{geocodeArea:London}}->.searchArea;
rel[route=subway](area.searchArea);
// buffer around stop station
foreach->.b(
  node(r.b:"stop");
  out;
);

{{geocodeArea:London}}->.searchArea;


((amenity=pub and food=yes) around "Royal Geographical Society, London GB") around railway=station


(fhrs:hygiene=* and amenity=restaurant) in London


/*
This has been generated by the overpass-turbo wizard.
The original search was:
“(fhrs:hygiene=* and amenity=restaurant) in London”
*/
[out:json][timeout:25];
// fetch area “London” to search in
{{geocodeArea:London}}->.searchArea;
// gather results
(
  // query part for: “"fhrs:hygiene"=* and amenity=restaurant”
  node["fhrs:hygiene"]["amenity"="restaurant"](area.searchArea);
);
// print results
out geom;

{{style:

node{
  color:blue;
  opacity:0.2;
  width:3;
  fill-color:blue;
  fill-opacity:0.4;
  symbol-shape: circle;
  symbol-size: eval('tag("fhrs:hygiene")');
}

node[fhrs:hygiene < 1] {
  color:red;
  opacity:0.2;
  width:3;
  fill-color:red;
  fill-opacity:0.4;
  symbol-shape: circle;
  symbol-size: eval('tag("fhrs:hygiene")');
}


}}


/*
This has been generated by the overpass-turbo wizard.
The original search was:
“(fhrs:hygiene=* and amenity=restaurant) in London”
*/
[out:json][timeout:25];
// fetch area “London” to search in
{{geocodeArea:London}}->.searchArea;
// gather results
(
  // query part for: “"fhrs:hygiene"=* and amenity=restaurant”
  node["fhrs:hygiene"]["amenity"="restaurant"](area.searchArea);
);
// print results
out geom;

{{style:

node {
  color:blue;
    opacity:0.2;
  width:3;
  fill-color:blue;
  fill-opacity:0.4;
  symbol-shape: circle;
  symbol-size: eval('tag("fhrs:hygiene")');

  }

node[fhrs:hygiene < 1] {
    icon-image: url('icons/maki/danger-24.png');
    icon-width: 38;
}

}}
